# Common commands for both Makefile and Makefile.win

FORCE:
release: FORCE
	rm -rf grfcodec$(EXE) grfdiff$(EXE) grfmerge$(EXE)
	$(_C)make -f $(MAKEFILE) $(_S) all
	$(_E) [STRIP/UPX] grfcodec$(REL_EXE) grfdiff$(REL_EXE) grfmerge$(REL_EXE)
	$(_C)strip  grfcodec$(REL_EXE) grfdiff$(REL_EXE) grfmerge$(REL_EXE)
	$(_C)upx $(_Q) --best  grfcodec$(REL_EXE) grfdiff$(REL_EXE) grfmerge$(REL_EXE)

# grfmrg.bin (the binary code included in grfdiff) can be either BCC or GCC code
grfmrg.bin:	grfmerge.exe
	$(_E) [UPX] $@
	$(_C)upx $(_Q) --best $< -o $@

# remake grfmerge.exe optimized for size instead of speed
grfmrgc.bin:	grfmerge.os $(GRFMERGESRC:%.c=%.os)
	$(_C)rm -f $@
	$(_E) [LD] $@
	$(_C)$(CC) -o grfmerge $(CFLAGS) -Os $^
	$(_E) [STRIP/UPX] $@
	$(_C)strip grfmerge$(EXE)
	$(_C)upx $(_Q) --best grfmerge$(EXE) -o $@
	$(_C)rm -f grfmerge$(EXE)

# making an assembly file which includes the above code; first for BCC
grfmrg.ah:	grfmrg.bin 
	$(_E) [PERL] $@
	$(_C)perl mkmrg.pl "db " '0$${_}h' < $< > $@
	$(_C)perl -le "print '_grfmrgsize dd ', (stat '$<')[7]" >> $@

grfmrg.obj:	grfmrg.asm grfmrg.ah
	$(_E) [TASM] $@
	$(_C)tasm32 /dM32 /ml $< -c -o $@

# and then for GCC
grfmrg.o:	grfmrgc.asm grfmrgc.bin
	$(_E) [NASM] $@
	$(_C)nasm -f $(NASMFORMAT) $< -o $@

ttdpal.h:	$(PAL_FILES) pal2c.pl
	$(_E) [PERL] $@
	$(_C)perl pal2c.pl $(PAL_FILES) > $@

# Gnu compiler rules

readinfo.o: readinfo.cc
	$(_E) [CPP] $@
	$(BOOST_WARN)	
	$(_C)$(CXX) -c -o $@ $(CXXFLAGS) $<

%.o : %.c
	$(_E) [CC] $@
	$(_C)$(CC) -c -o $@ $(CFLAGS) $<

%.o : %.cc
	$(_E) [CPP] $@
	$(_C)$(CXX) -c -o $@ $(CXXFLAGS) $<

% : %.o
	$(_E) [LD] $@
	$(_C)$(CC) -o $@ $(CFLAGS) $^ $(LDOPT)
	$(_C)$(CP_TO_EXE)

%.S : %.c
	$(_E) [CC] $@
	$(_C)$(CC) -S -o $@ $(CFLAGS) $<

%.S : %.cc
	$(_E) [CPP] $@
	$(_C)$(CC) -S -o $@ $(CXXFLAGS) $<


# same as above but optimized for size not speed
%.os : %.c
	$(_E) [CC] $@
	$(_C)$(CC) -c -o $@ $(CFLAGS) -Os $<

% :: %.os
	$(_E) [LD] $@
	$(_C)$(CC) -o $@ $(CFLAGS) $^ $(LDOPT)

# Borland compiler rules

%.obj : %.c
	$(_E) [CC] $@
	$(_C)$(BCC) $(COPTS) -c $< -o$@

%.obj : %.cc
	$(_E) [CPP] $@
	$(_C)$(BCC) -P $(CPPOPTS) -c $< -o$@

%.exe : %.obj
	$(_E) [LD] $@
	$(_C)$(BCC) $(LOPTS) $^ -e$@

Makefile.dep: .remake_deps
	$(_E) [DEP] $@
	$(_C)$(CC) $(CFLAGS) -MM -MG *.c *.cc > $@
	$(_C)perl -e "open DEP, '+<$@';@dep=<DEP>;s/.o:/.obj:/g for @dep;seek DEP,0,2;print DEP @dep"

ifndef NO_MAKEFILE_DEP
-include Makefile.dep
endif
