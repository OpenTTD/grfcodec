# Common setup for both Makefile and Makefile.win

# Order of the palettes compiled in
# (note, this must match the text in grfcodec.cc and grftut.txt)
PALORDER = ttd_norm&ttw_norm&ttd_cand&ttw_cand&tt1_norm&tt1_mars&ttw_pb_pal1&ttw_pb_pal2

# A command to return the current SVN revision of the source tree; it should
# it in the format [##:]##, where the second set of digits is the current
# revision (used for adding the revision to the version string)
SVNVERSION = svnversion -c .	# standard SVN client (e.g. cygwin)
# SVNVERSION = SubWCRev.exe .	# TortoiseSVN

# Optional parts of grfcodec are dependent on boost::date_time
# Get boost from www.boost.org
# If you do not have boost, make should detect this, and compile a version
# of grfcodec that does not include the boost-dependent parts.
#
# Set these as appropriate; BOOST_VERSION is used to help automatically
# locate your boost include directory. The usual format is x_yy for x.yy.0
# versions and x_yy_z for x.yy.z releases
BOOST_VERSION = 1_33_1
# If that fails, set your boost include folder here.
#BOOST_INCLUDE = 
# If make is convinced that you do have boost installed when you do not,
# uncomment the following line:
#NO_BOOST = 1

# OS detection: Cygwin vs Linux
ISCYGWIN = $(shell [ ! -d /cygdrive/ ]; echo $$?)

# .exe extension (Because Cygwin's gcc adds .exe for us)
EXE = $(shell [ \( $(ISCYGWIN) -eq 1 \) ] && echo .exe )

# Somewhat automatic detection of the correct boost include folder
ifndef BOOST_INCLUDE
BOOST_INCLUDE=$(shell \
( [ -d /usr/local/include/boost-$(BOOST_VERSION)/boost ] && echo /usr/local/include/boost-$(BOOST_VERSION) ) || \
( [ -d /usr/include/boost-$(BOOST_VERSION)/boost ] && echo /usr/include/boost-$(BOOST_VERSION) ) || \
echo CANNOT_FIND_BOOST_INCLUDE_DIRECTORY )
endif

ifndef V
V=0 # verbose build default off
endif

# =======================================================================
#           setup verbose/non-verbose make process
# =======================================================================

# _E = prefix for the echo [TYPE] TARGET
# _C = prefix for the actual command(s)
# _I = indentation for sub-make
# _Q = number of 'q's for UPX
# _S = sub-makes silent?
ifeq (${V},1)
	# verbose, set _C = nothing (print command), _E = comment (don't echo)
	_C=
	_E=@\#
	_Q=-qq
	_S=
else
	# not verbose, _C = @ (suppress cmd line), _E = @echo (echo type&target)
	_C=@
	_E:=@echo -e ${_I}
	_Q=-qqq
	_S=-s
endif

# increase indentation level for sub-makes
_I := ${_I}\\t
export _I

# standard compilation commands should be of the form
# target:	prerequisites
#	${_E} [CMD] $@
#	${_C}${CMD} ...arguments...
#
# non-standard commands (those not invoked by make all/dos/win) should
# use the regular syntax (without the ${_E} line and without the ${_C} prefix)
# because they'll be only used for testing special conditions
#
# =======================================================================


# sources to be linked with each of these programs
GRFCODECSRC=grfcomm.c pcxfile.c sprites.c pcxsprit.c info.c \
	error.c getopt.c path.c readinfo.c file.c grfcodec.c

GRFDIFFSRC=grfcomm.c error.c sprites.c getopt.c grfdiff.c path.c

GRFMERGESRC=getopt.c grfmerge.c

ifndef NOREV
NOREV = 0
endif

ifndef NO_BOOST
NO_BOOST = 0
endif

ifeq ($(BOOST_INCLUDE),CANNOT_FIND_BOOST_INCLUDE_DIRECTORY)
BOOST_CMD=-DNO_BOOST
BOOST_WARN = @echo "Warning: boost::date_time not found." ; echo "  \\w<date> and \\d<date> will not be supported."
else
BOOST_CMD=-I$(BOOST_INCLUDE)
endif

ifneq ($(NO_BOOST),0)
BOOST_CMD=-DNO_BOOST
BOOST_WARN = @echo "Warning: \\w<date> and \\d<date> support disabled by NO_BOOST setting."
endif

PAL_FILES = pals/$(subst &,.bcp pals/,$(PALORDER)).bcp

# default targets
all: grfcodec grfdiff grfmerge
allb: grfcodec.exe grfdiff.exe grfmerge.exe

grfcodec:	$(GRFCODECSRC:%.c=%.o)
grfdiff:	$(GRFDIFFSRC:%.c=%.o) grfmrg.o
grfmerge:	$(GRFMERGESRC:%.c=%.o)

grfcodec.exe:	$(GRFCODECSRC:%.c=%.obj)
grfdiff.exe:	$(GRFDIFFSRC:%.c=%.obj)
grfmerge.exe:	$(GRFMERGESRC:%.c=%.obj)

clean:
	rm -rf *.o *.os *.obj *.OBJ *.exe *.EXE *.map *.MAP *.bin grfmrg.ah

remake: clean all

FORCE:
.rev: FORCE ttdpal.h
	${_C} [ -e $@ ] || echo SVNREV=0 > $@
	${_C} REV=`${SVNVERSION}` perl rev.pl $@ < $@

-include .rev
include version.def

version.h: FORCE
	@echo // Autogenerated by make.  Do not edit.  Edit version.def or the Makefile instead. > $@.tmp
	@echo "#define GRFCODECVER \"$(VERSIONSTR)\"" >> $@.tmp
	@(diff $@.tmp $@ > /dev/null 2>&1 && rm -f $@.tmp) || (rm -f $@ ; mv $@.tmp $@)
